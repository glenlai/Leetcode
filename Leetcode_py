#1295 Runtime: 56 ms, faster than 39.90% of Python3 online submissions for Find Numbers with Even Number of Digits.
class Solution:
    def findNumbers(self, nums: List[int]) -> int:
        
        result = 0
        l = len(nums)
        for i in range(0,l):
            dig = 0
            while(nums[i]>=1):
                nums[i]=nums[i]/10
                dig = dig+1
            if(dig%2==0):
                result = result+1
        return result
                
#709
def toLowerCase(self, str: str) -> str:
        s = ''
        for i in str:
            if ord(i)<91 and ord(i)>64:
                j=ord(i)+32
                s=s+chr(j)
            else:
                s=s+i
                
        return s

#7
def reverse(self, x: int) -> int:
        s=str(x)
        k=''
        for i in range(len(s)-1,-1,-1):
            if s[i]=='-':
                k='-'+k
                break
            else:
                k=k+s[i]
                
        k = int(k)
        if(k>2147483647 or k<-2147483647):
            return 0
        else:
            return k
            
  #1365
  class Solution:
    def smallerNumbersThanCurrent(self, nums: List[int]) -> List[int]:
        res = []
        
        l = len(nums)
        for i in range(0,l):
            count = 0
            j = nums[i]
            for k in range(0,l):
                if (j > nums[k]):
                    count = count + 1
            res.append(count)
                
            
        return res
    
    ''' result = []
        tempNums = nums.copy()
        nums.sort()
        for n in tempNums:
            result.append(nums.index(n))
        return result
    '''
#1313  Runtime: 72 ms, faster than 37.42% of Python3 online submissions for Decompress Run-Length Encoded List.
class Solution:
    def decompressRLElist(self, nums: List[int]) -> List[int]:
        my_list = []
        l = len(nums)
        for i in range(0,l-1,2):
            f = (nums[i])
            v = (nums[i+1])
            my_list.extend([v for i in range(f)])
            
        return my_list
